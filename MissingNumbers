//Given two arrays of integers, find which elements in the second array are missing from the first array.

//Example
//arr =[7,2,5,3,5,3]
//brr =[7,2,5,4,6,3,5,3]

//The brr array is the orginal list. The numbers missing are [4,6].

//Notes

//If a number occurs multiple times in the lists, you must ensure that the frequency of that number in both lists is the same. If that is not the case, 
//then it is also a missing number.
//Return the missing numbers sorted ascending.
//Only include a missing number once, even if it is missing multiple times.
//The difference between the maximum and minimum numbers in the original list is less than or equal to 100.
//Function Description

//Complete the missingNumbers function in the editor below. It should return a sorted array of missing numbers.

//missingNumbers has the following parameter(s):

//int arr[n]: the array with missing numbers
//int brr[m]: the original array of numbers
//Returns

//int[]: an array of integers
//Input Format

//There will be four lines of input:

//n - the size of the first list, arr
//The next line contains  space-separated integers arr[i]
//m - the size of the second list, brr
//The next line contains  space-separated integers brr[i]

function missingNumbers(arr, brr) {
    for (let i = 0; i< arr.length; i++){
        if (brr.includes(arr[i])){
            var index = brr.indexOf(arr[i])
            brr.splice(index, 1)
        }
    }
    brr.sort((a, b) => a - b)
    for (let i =0; i<brr.length; i++){
        if (brr[i] == brr[i+1]){
            brr.splice(i, 1);
            i--
        }
    }
    return brr
}
