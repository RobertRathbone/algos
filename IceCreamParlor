//Two friends like to pool their money and go to the ice cream parlor. They always choose two distinct flavors and they spend all of their money.

//Given a list of prices for the flavors of ice cream, select the two that will cost all of the money they have.

//Example.  m = 6 cost = [1,3,4,5,6]

//The two flavors that cost 1 and 5 meet the criteria. Using 1-based indexing, they are at indices 1 and 4.

//Function Description

//Complete the icecreamParlor function in the editor below.

//icecreamParlor has the following parameter(s):

//int m: the amount of money they have to spend
//int cost[n]: the cost of each flavor of ice cream
//Returns

//int[2]: the indices of the prices of the two flavors they buy, sorted ascending
//Input Format

//The first line contains an integer, , the number of trips to the ice cream parlor. The next  sets of lines each describe a visit.

//Each trip is described as follows:

//The integer m, the amount of money they have pooled.
//The integer n, the number of flavors offered at the time.
// space-separated integers denoting the cost of each flavor: 
// cost[cost[1], cost[2],...cost[n]].
//Note: The index within the cost array represents the flavor of the ice cream purchased.

function icecreamParlor(m, arr) {
    // Write your code here
    for (let i = 0; i< arr.length; i++){
        for (let j = arr.length; j> 0; j--){
            if (arr[i] + arr[j] == m && i != j){
                
                console.log ("i", i, arr[i], arr[j], m, arr);
                return [i+1, j+1]
            }
        }
    }

}
